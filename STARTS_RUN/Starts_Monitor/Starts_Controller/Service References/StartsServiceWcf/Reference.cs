//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Starts_Controller.StartsServiceWcf {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StartsServiceWcf.IAppService")]
    public interface IAppService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/AllCode_Gets", ReplyAction="http://tempuri.org/IAppService/AllCode_GetsResponse")]
        byte[] AllCode_Gets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/AllCode_GetBy_CdNameCdType", ReplyAction="http://tempuri.org/IAppService/AllCode_GetBy_CdNameCdTypeResponse")]
        byte[] AllCode_GetBy_CdNameCdType(string p_cdtype, string p_cdname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/AllCode_CheckWCF", ReplyAction="http://tempuri.org/IAppService/AllCode_CheckWCFResponse")]
        string AllCode_CheckWCF();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Get_Current_Date_Computer_Run_Service", ReplyAction="http://tempuri.org/IAppService/Get_Current_Date_Computer_Run_ServiceResponse")]
        System.DateTime Get_Current_Date_Computer_Run_Service();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/GetVersionInfo", ReplyAction="http://tempuri.org/IAppService/GetVersionInfoResponse")]
        byte[] GetVersionInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/GetUpdateList", ReplyAction="http://tempuri.org/IAppService/GetUpdateListResponse")]
        string GetUpdateList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/GetFile", ReplyAction="http://tempuri.org/IAppService/GetFileResponse")]
        byte[] GetFile(string filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Building_GetAll", ReplyAction="http://tempuri.org/IAppService/Building_GetAllResponse")]
        byte[] Building_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Building_Delete", ReplyAction="http://tempuri.org/IAppService/Building_DeleteResponse")]
        bool Building_Delete(decimal Building_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/GetBuildingInEstate", ReplyAction="http://tempuri.org/IAppService/GetBuildingInEstateResponse")]
        byte[] GetBuildingInEstate(decimal Building_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Building_Update", ReplyAction="http://tempuri.org/IAppService/Building_UpdateResponse")]
        decimal Building_Update(decimal Building_Id, string Buiding_Name, string Address, string Notes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Building_Insert", ReplyAction="http://tempuri.org/IAppService/Building_InsertResponse")]
        decimal Building_Insert(string Buiding_Name, string Address, string Building_Code, string Notes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Building_Search", ReplyAction="http://tempuri.org/IAppService/Building_SearchResponse")]
        byte[] Building_Search(string Building_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_GetAll", ReplyAction="http://tempuri.org/IAppService/Contract_GetAllResponse")]
        byte[] Contract_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_GetByStatus", ReplyAction="http://tempuri.org/IAppService/Contract_GetByStatusResponse")]
        byte[] Contract_GetByStatus(decimal p_status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_GetBy_EstateObject", ReplyAction="http://tempuri.org/IAppService/Contract_GetBy_EstateObjectResponse")]
        byte[] Contract_GetBy_EstateObject(decimal p_Estate_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_GetById", ReplyAction="http://tempuri.org/IAppService/Contract_GetByIdResponse")]
        byte[] Contract_GetById(decimal Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_GetBy_RenterTenant", ReplyAction="http://tempuri.org/IAppService/Contract_GetBy_RenterTenantResponse")]
        byte[] Contract_GetBy_RenterTenant(decimal p_Object_Id, decimal p_Object_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_GetBy_Type", ReplyAction="http://tempuri.org/IAppService/Contract_GetBy_TypeResponse")]
        byte[] Contract_GetBy_Type(decimal p_Contract_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_Render_Search", ReplyAction="http://tempuri.org/IAppService/Contract_Render_SearchResponse")]
        byte[] Contract_Render_Search(string p_Contract_Code, string p_status, string p_Payment_Status, string p_building, string Customer_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_Search_ByContract_Type", ReplyAction="http://tempuri.org/IAppService/Contract_Search_ByContract_TypeResponse")]
        byte[] Contract_Search_ByContract_Type(string p_Contract_Type, string p_Contract_Code, string p_status, string p_Payment_Status, string p_building);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_Search", ReplyAction="http://tempuri.org/IAppService/Contract_SearchResponse")]
        byte[] Contract_Search(string p_Contract_Code, string p_status, string p_Payment_Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_Search_DenHanTB", ReplyAction="http://tempuri.org/IAppService/Contract_Search_DenHanTBResponse")]
        byte[] Contract_Search_DenHanTB(string DateNow, string DateNow_Add);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Convert_Dola", ReplyAction="http://tempuri.org/IAppService/Convert_DolaResponse")]
        string Convert_Dola(decimal p_money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Get_Max_Contract_Id", ReplyAction="http://tempuri.org/IAppService/Get_Max_Contract_IdResponse")]
        decimal Get_Max_Contract_Id();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Get_Contract_Exprire_Date", ReplyAction="http://tempuri.org/IAppService/Get_Contract_Exprire_DateResponse")]
        byte[] Get_Contract_Exprire_Date(string Contract_ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Update_Status_Contract", ReplyAction="http://tempuri.org/IAppService/Update_Status_ContractResponse")]
        bool Update_Status_Contract(decimal Contract_Id, decimal Status, string p_Modifi_By, System.DateTime p_Mofifi_Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_Search_ByExtend", ReplyAction="http://tempuri.org/IAppService/Contract_Search_ByExtendResponse")]
        byte[] Contract_Search_ByExtend(string p_Contract_Type, string p_Contract_Code, string p_status, string p_Payment_Status, string p_building);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_Get_EstateByContract", ReplyAction="http://tempuri.org/IAppService/Contract_Get_EstateByContractResponse")]
        byte[] Contract_Get_EstateByContract(decimal Estate_Id, decimal Contract_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_GetByCode", ReplyAction="http://tempuri.org/IAppService/Contract_GetByCodeResponse")]
        byte[] Contract_GetByCode(string Contract_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_Delete", ReplyAction="http://tempuri.org/IAppService/Contract_DeleteResponse")]
        bool Contract_Delete(decimal p_Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_Update", ReplyAction="http://tempuri.org/IAppService/Contract_UpdateResponse")]
        bool Contract_Update(
                    decimal p_Contract_Id, 
                    string p_Contract_Code, 
                    string p_Contract_name, 
                    decimal p_Status, 
                    decimal p_Estate_Id, 
                    decimal p_Object_Id, 
                    decimal p_Contract_Type, 
                    decimal Price, 
                    decimal Fee, 
                    decimal Currency, 
                    decimal Fee_Status, 
                    System.DateTime Contract_FromDate, 
                    System.DateTime Contract_ToDate, 
                    decimal Term, 
                    decimal Pay_Count, 
                    decimal Object_Type, 
                    System.DateTime Contract_date, 
                    decimal FeeOnePay, 
                    string p_Modifi_By, 
                    System.DateTime p_Mofifi_Date, 
                    string Users, 
                    string Representive, 
                    System.DateTime Contract_ToDate_Ex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Contract_Insert", ReplyAction="http://tempuri.org/IAppService/Contract_InsertResponse")]
        decimal Contract_Insert(
                    string p_Contract_Code, 
                    string p_Contract_name, 
                    decimal p_Status, 
                    decimal p_Estate_Id, 
                    decimal p_Object_Id, 
                    decimal p_Contract_Type, 
                    decimal Price, 
                    decimal Fee, 
                    decimal Currency, 
                    decimal Fee_Status, 
                    System.DateTime Contract_FromDate, 
                    System.DateTime Contract_ToDate, 
                    decimal Term, 
                    decimal Pay_Count, 
                    decimal Object_Type, 
                    System.DateTime Contract_date, 
                    decimal FeeOnePay, 
                    string p_Created_by, 
                    System.DateTime p_Created_Date, 
                    string Users, 
                    string Representive, 
                    System.DateTime Contract_ToDate_Ex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Customer_GetAll", ReplyAction="http://tempuri.org/IAppService/Customer_GetAllResponse")]
        byte[] Customer_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Customer_GetById", ReplyAction="http://tempuri.org/IAppService/Customer_GetByIdResponse")]
        byte[] Customer_GetById(decimal p_Tenant_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Customer_Delete", ReplyAction="http://tempuri.org/IAppService/Customer_DeleteResponse")]
        bool Customer_Delete(decimal Customer_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Customer_Update", ReplyAction="http://tempuri.org/IAppService/Customer_UpdateResponse")]
        bool Customer_Update(decimal Customer_Id, string Customer_Name, string p_Phone, string p_Fax, string p_Identity_Card, string p_Address, string p_Tax_Code, decimal Customer_Type, decimal Is_Person, string Position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Customer_Insert", ReplyAction="http://tempuri.org/IAppService/Customer_InsertResponse")]
        decimal Customer_Insert(string Customer_Name, string p_Phone, string p_Fax, string p_Identity_Card, string p_Address, string p_Tax_Code, decimal Customer_Type, decimal Is_Person, string Position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Customer_Search", ReplyAction="http://tempuri.org/IAppService/Customer_SearchResponse")]
        byte[] Customer_Search(string p_Tenant_Name, string p_Phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Customer_Check_In_Contract", ReplyAction="http://tempuri.org/IAppService/Customer_Check_In_ContractResponse")]
        byte[] Customer_Check_In_Contract(decimal Customer_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Estate_Object_GetAll", ReplyAction="http://tempuri.org/IAppService/Estate_Object_GetAllResponse")]
        byte[] Estate_Object_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Estate_Object_GetStatus", ReplyAction="http://tempuri.org/IAppService/Estate_Object_GetStatusResponse")]
        byte[] Estate_Object_GetStatus(decimal p_status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Estate_Object_GetById", ReplyAction="http://tempuri.org/IAppService/Estate_Object_GetByIdResponse")]
        byte[] Estate_Object_GetById(decimal p_Estate_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Estate_Object_GetType", ReplyAction="http://tempuri.org/IAppService/Estate_Object_GetTypeResponse")]
        byte[] Estate_Object_GetType(decimal p_Estate_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Estate_Object_GetByObject", ReplyAction="http://tempuri.org/IAppService/Estate_Object_GetByObjectResponse")]
        byte[] Estate_Object_GetByObject(decimal p_Estate_Id, decimal p_Object_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Estate_Object_Update", ReplyAction="http://tempuri.org/IAppService/Estate_Object_UpdateResponse")]
        bool Estate_Object_Update(decimal p_Estate_Id, string p_Estate_Name, decimal p_Estate_Type, string p_Area, decimal p_Status, string p_note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Estate_Object_Delete", ReplyAction="http://tempuri.org/IAppService/Estate_Object_DeleteResponse")]
        bool Estate_Object_Delete(decimal p_Estate_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Estate_Object_Insert", ReplyAction="http://tempuri.org/IAppService/Estate_Object_InsertResponse")]
        decimal Estate_Object_Insert(string p_Estate_Name, decimal p_Estate_Type, string p_Area, decimal p_Statu, string p_notes, string p_Estate_Code, decimal Building_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Check_Exit_EstateInContract", ReplyAction="http://tempuri.org/IAppService/Check_Exit_EstateInContractResponse")]
        byte[] Check_Exit_EstateInContract(decimal p_Estate_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Estate_Object_Search", ReplyAction="http://tempuri.org/IAppService/Estate_Object_SearchResponse")]
        byte[] Estate_Object_Search(string p_Estate_Name, string p_Estate_Type, string p_Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Estate_Object_GetCbo", ReplyAction="http://tempuri.org/IAppService/Estate_Object_GetCboResponse")]
        byte[] Estate_Object_GetCbo(decimal Contract_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Extend_Contract_Insert", ReplyAction="http://tempuri.org/IAppService/Extend_Contract_InsertResponse")]
        decimal Extend_Contract_Insert(decimal p_Contract_Id, System.DateTime Contract_FromDate, System.DateTime Contract_ToDate, System.DateTime Extend_Date, decimal Term, decimal Fee, decimal FeeOnePay, decimal Price, decimal Number_Extend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Extend_Contract_Update", ReplyAction="http://tempuri.org/IAppService/Extend_Contract_UpdateResponse")]
        decimal Extend_Contract_Update(decimal p_Contract_Id, System.DateTime Contract_FromDate, System.DateTime Contract_ToDate, System.DateTime Extend_Date, decimal Term, decimal Fee, decimal FeeOnePay, decimal Price, decimal Fee_Status, decimal Extend_Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Extend_Contract_GetByContractId", ReplyAction="http://tempuri.org/IAppService/Extend_Contract_GetByContractIdResponse")]
        byte[] Extend_Contract_GetByContractId(decimal Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Get_Number_ExtendContract", ReplyAction="http://tempuri.org/IAppService/Get_Number_ExtendContractResponse")]
        decimal Get_Number_ExtendContract(decimal Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Fees_Revenue_GetAll", ReplyAction="http://tempuri.org/IAppService/Fees_Revenue_GetAllResponse")]
        byte[] Fees_Revenue_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Fees_Revenue_GetByContract", ReplyAction="http://tempuri.org/IAppService/Fees_Revenue_GetByContractResponse")]
        byte[] Fees_Revenue_GetByContract(decimal p_Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Fees_Revenue_GetByObject", ReplyAction="http://tempuri.org/IAppService/Fees_Revenue_GetByObjectResponse")]
        byte[] Fees_Revenue_GetByObject(decimal p_Object_Id, decimal p_Object_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Fees_Revenue_Update", ReplyAction="http://tempuri.org/IAppService/Fees_Revenue_UpdateResponse")]
        bool Fees_Revenue_Update(decimal p_Fee_Id, System.DateTime p_Pay_Date, decimal p_Fee, decimal p_status, decimal Debit_Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Fees_Revenue_Insert", ReplyAction="http://tempuri.org/IAppService/Fees_Revenue_InsertResponse")]
        bool Fees_Revenue_Insert(decimal Contract_Id, decimal Object_Id, decimal Object_Type, decimal Currency, decimal Number_Payment, System.DateTime Pay_Date_Expected, System.DateTime Pay_Date, decimal Fee_Expected, decimal Fee, decimal Pay_Status, System.DateTime Date_Of_Bill, decimal Debit_Amount, decimal Is_Extend, decimal Fee_Vnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Fees_Revenue_DeleteByContract", ReplyAction="http://tempuri.org/IAppService/Fees_Revenue_DeleteByContractResponse")]
        bool Fees_Revenue_DeleteByContract(decimal p_Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Fees_Revenue_GetByObjectType", ReplyAction="http://tempuri.org/IAppService/Fees_Revenue_GetByObjectTypeResponse")]
        byte[] Fees_Revenue_GetByObjectType(decimal p_Object_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Fees_Report", ReplyAction="http://tempuri.org/IAppService/Fees_ReportResponse")]
        byte[] Fees_Report(string FromDate, string ToDate, string Created_By, string Estate_Code, string Users, string Customer_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Function_GetAll", ReplyAction="http://tempuri.org/IAppService/Function_GetAllResponse")]
        byte[] Function_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Function_Group_DelByGroup", ReplyAction="http://tempuri.org/IAppService/Function_Group_DelByGroupResponse")]
        bool Function_Group_DelByGroup(decimal p_group_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Get_Function_ByGroup", ReplyAction="http://tempuri.org/IAppService/Get_Function_ByGroupResponse")]
        byte[] Get_Function_ByGroup(decimal p_group_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Function_Group_Insert_Batch", ReplyAction="http://tempuri.org/IAppService/Function_Group_Insert_BatchResponse")]
        int Function_Group_Insert_Batch(ObjInfo.Function_GroupInfo[] p_arr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/GroupUser_GetAll", ReplyAction="http://tempuri.org/IAppService/GroupUser_GetAllResponse")]
        byte[] GroupUser_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/GroupUser_Delete", ReplyAction="http://tempuri.org/IAppService/GroupUser_DeleteResponse")]
        bool GroupUser_Delete(decimal id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/GroupUser_Update", ReplyAction="http://tempuri.org/IAppService/GroupUser_UpdateResponse")]
        bool GroupUser_Update(decimal id, string p_name, decimal p_group_type, string p_note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/GroupUser_Insert", ReplyAction="http://tempuri.org/IAppService/GroupUser_InsertResponse")]
        decimal GroupUser_Insert(string p_name, decimal p_group_type, string p_note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/User_Login", ReplyAction="http://tempuri.org/IAppService/User_LoginResponse")]
        byte[] User_Login(string p_user_name, string p_pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/User_Get_All", ReplyAction="http://tempuri.org/IAppService/User_Get_AllResponse")]
        byte[] User_Get_All();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/User_Update_Last_Login", ReplyAction="http://tempuri.org/IAppService/User_Update_Last_LoginResponse")]
        bool User_Update_Last_Login(decimal p_User_Id, System.DateTime p_last);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/User_Update_Pass", ReplyAction="http://tempuri.org/IAppService/User_Update_PassResponse")]
        bool User_Update_Pass(decimal p_User_Id, string p_pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/User_Delete", ReplyAction="http://tempuri.org/IAppService/User_DeleteResponse")]
        bool User_Delete(decimal p_User_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/User_Insert", ReplyAction="http://tempuri.org/IAppService/User_InsertResponse")]
        decimal User_Insert(string p_User_Name, string p_pass, decimal p_user_type, string p_full_name, decimal p_status, string p_phone, decimal p_group_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/User_Update", ReplyAction="http://tempuri.org/IAppService/User_UpdateResponse")]
        bool User_Update(decimal p_User_Id, string p_User_Name, string p_pass, decimal p_user_type, string p_full_name, decimal p_status, string p_phone, decimal p_group_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Send_Users_Get_MenuItem", ReplyAction="http://tempuri.org/IAppService/Send_Users_Get_MenuItemResponse")]
        byte[] Send_Users_Get_MenuItem(string p_user_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/User_Rights_DelByUser", ReplyAction="http://tempuri.org/IAppService/User_Rights_DelByUserResponse")]
        void User_Rights_DelByUser(string p_user_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/Delete_User_Right_By_UserFuntion", ReplyAction="http://tempuri.org/IAppService/Delete_User_Right_By_UserFuntionResponse")]
        void Delete_User_Right_By_UserFuntion(string p_user_name, string p_fun_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/User_Rights_Insert_Barth", ReplyAction="http://tempuri.org/IAppService/User_Rights_Insert_BarthResponse")]
        int User_Rights_Insert_Barth(ObjInfo.User_RightsInfo[] p_arr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppService/User_Rights_GetByUser", ReplyAction="http://tempuri.org/IAppService/User_Rights_GetByUserResponse")]
        byte[] User_Rights_GetByUser(decimal p_group_id, string p_username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAppServiceChannel : Starts_Controller.StartsServiceWcf.IAppService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AppServiceClient : System.ServiceModel.ClientBase<Starts_Controller.StartsServiceWcf.IAppService>, Starts_Controller.StartsServiceWcf.IAppService {
        
        public AppServiceClient() {
        }
        
        public AppServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AppServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] AllCode_Gets() {
            return base.Channel.AllCode_Gets();
        }
        
        public byte[] AllCode_GetBy_CdNameCdType(string p_cdtype, string p_cdname) {
            return base.Channel.AllCode_GetBy_CdNameCdType(p_cdtype, p_cdname);
        }
        
        public string AllCode_CheckWCF() {
            return base.Channel.AllCode_CheckWCF();
        }
        
        public System.DateTime Get_Current_Date_Computer_Run_Service() {
            return base.Channel.Get_Current_Date_Computer_Run_Service();
        }
        
        public byte[] GetVersionInfo() {
            return base.Channel.GetVersionInfo();
        }
        
        public string GetUpdateList() {
            return base.Channel.GetUpdateList();
        }
        
        public byte[] GetFile(string filename) {
            return base.Channel.GetFile(filename);
        }
        
        public byte[] Building_GetAll() {
            return base.Channel.Building_GetAll();
        }
        
        public bool Building_Delete(decimal Building_Id) {
            return base.Channel.Building_Delete(Building_Id);
        }
        
        public byte[] GetBuildingInEstate(decimal Building_Id) {
            return base.Channel.GetBuildingInEstate(Building_Id);
        }
        
        public decimal Building_Update(decimal Building_Id, string Buiding_Name, string Address, string Notes) {
            return base.Channel.Building_Update(Building_Id, Buiding_Name, Address, Notes);
        }
        
        public decimal Building_Insert(string Buiding_Name, string Address, string Building_Code, string Notes) {
            return base.Channel.Building_Insert(Buiding_Name, Address, Building_Code, Notes);
        }
        
        public byte[] Building_Search(string Building_Name) {
            return base.Channel.Building_Search(Building_Name);
        }
        
        public byte[] Contract_GetAll() {
            return base.Channel.Contract_GetAll();
        }
        
        public byte[] Contract_GetByStatus(decimal p_status) {
            return base.Channel.Contract_GetByStatus(p_status);
        }
        
        public byte[] Contract_GetBy_EstateObject(decimal p_Estate_Id) {
            return base.Channel.Contract_GetBy_EstateObject(p_Estate_Id);
        }
        
        public byte[] Contract_GetById(decimal Contract_Id) {
            return base.Channel.Contract_GetById(Contract_Id);
        }
        
        public byte[] Contract_GetBy_RenterTenant(decimal p_Object_Id, decimal p_Object_Type) {
            return base.Channel.Contract_GetBy_RenterTenant(p_Object_Id, p_Object_Type);
        }
        
        public byte[] Contract_GetBy_Type(decimal p_Contract_Type) {
            return base.Channel.Contract_GetBy_Type(p_Contract_Type);
        }
        
        public byte[] Contract_Render_Search(string p_Contract_Code, string p_status, string p_Payment_Status, string p_building, string Customer_Name) {
            return base.Channel.Contract_Render_Search(p_Contract_Code, p_status, p_Payment_Status, p_building, Customer_Name);
        }
        
        public byte[] Contract_Search_ByContract_Type(string p_Contract_Type, string p_Contract_Code, string p_status, string p_Payment_Status, string p_building) {
            return base.Channel.Contract_Search_ByContract_Type(p_Contract_Type, p_Contract_Code, p_status, p_Payment_Status, p_building);
        }
        
        public byte[] Contract_Search(string p_Contract_Code, string p_status, string p_Payment_Status) {
            return base.Channel.Contract_Search(p_Contract_Code, p_status, p_Payment_Status);
        }
        
        public byte[] Contract_Search_DenHanTB(string DateNow, string DateNow_Add) {
            return base.Channel.Contract_Search_DenHanTB(DateNow, DateNow_Add);
        }
        
        public string Convert_Dola(decimal p_money) {
            return base.Channel.Convert_Dola(p_money);
        }
        
        public decimal Get_Max_Contract_Id() {
            return base.Channel.Get_Max_Contract_Id();
        }
        
        public byte[] Get_Contract_Exprire_Date(string Contract_ToDate) {
            return base.Channel.Get_Contract_Exprire_Date(Contract_ToDate);
        }
        
        public bool Update_Status_Contract(decimal Contract_Id, decimal Status, string p_Modifi_By, System.DateTime p_Mofifi_Date) {
            return base.Channel.Update_Status_Contract(Contract_Id, Status, p_Modifi_By, p_Mofifi_Date);
        }
        
        public byte[] Contract_Search_ByExtend(string p_Contract_Type, string p_Contract_Code, string p_status, string p_Payment_Status, string p_building) {
            return base.Channel.Contract_Search_ByExtend(p_Contract_Type, p_Contract_Code, p_status, p_Payment_Status, p_building);
        }
        
        public byte[] Contract_Get_EstateByContract(decimal Estate_Id, decimal Contract_Type) {
            return base.Channel.Contract_Get_EstateByContract(Estate_Id, Contract_Type);
        }
        
        public byte[] Contract_GetByCode(string Contract_Code) {
            return base.Channel.Contract_GetByCode(Contract_Code);
        }
        
        public bool Contract_Delete(decimal p_Contract_Id) {
            return base.Channel.Contract_Delete(p_Contract_Id);
        }
        
        public bool Contract_Update(
                    decimal p_Contract_Id, 
                    string p_Contract_Code, 
                    string p_Contract_name, 
                    decimal p_Status, 
                    decimal p_Estate_Id, 
                    decimal p_Object_Id, 
                    decimal p_Contract_Type, 
                    decimal Price, 
                    decimal Fee, 
                    decimal Currency, 
                    decimal Fee_Status, 
                    System.DateTime Contract_FromDate, 
                    System.DateTime Contract_ToDate, 
                    decimal Term, 
                    decimal Pay_Count, 
                    decimal Object_Type, 
                    System.DateTime Contract_date, 
                    decimal FeeOnePay, 
                    string p_Modifi_By, 
                    System.DateTime p_Mofifi_Date, 
                    string Users, 
                    string Representive, 
                    System.DateTime Contract_ToDate_Ex) {
            return base.Channel.Contract_Update(p_Contract_Id, p_Contract_Code, p_Contract_name, p_Status, p_Estate_Id, p_Object_Id, p_Contract_Type, Price, Fee, Currency, Fee_Status, Contract_FromDate, Contract_ToDate, Term, Pay_Count, Object_Type, Contract_date, FeeOnePay, p_Modifi_By, p_Mofifi_Date, Users, Representive, Contract_ToDate_Ex);
        }
        
        public decimal Contract_Insert(
                    string p_Contract_Code, 
                    string p_Contract_name, 
                    decimal p_Status, 
                    decimal p_Estate_Id, 
                    decimal p_Object_Id, 
                    decimal p_Contract_Type, 
                    decimal Price, 
                    decimal Fee, 
                    decimal Currency, 
                    decimal Fee_Status, 
                    System.DateTime Contract_FromDate, 
                    System.DateTime Contract_ToDate, 
                    decimal Term, 
                    decimal Pay_Count, 
                    decimal Object_Type, 
                    System.DateTime Contract_date, 
                    decimal FeeOnePay, 
                    string p_Created_by, 
                    System.DateTime p_Created_Date, 
                    string Users, 
                    string Representive, 
                    System.DateTime Contract_ToDate_Ex) {
            return base.Channel.Contract_Insert(p_Contract_Code, p_Contract_name, p_Status, p_Estate_Id, p_Object_Id, p_Contract_Type, Price, Fee, Currency, Fee_Status, Contract_FromDate, Contract_ToDate, Term, Pay_Count, Object_Type, Contract_date, FeeOnePay, p_Created_by, p_Created_Date, Users, Representive, Contract_ToDate_Ex);
        }
        
        public byte[] Customer_GetAll() {
            return base.Channel.Customer_GetAll();
        }
        
        public byte[] Customer_GetById(decimal p_Tenant_Id) {
            return base.Channel.Customer_GetById(p_Tenant_Id);
        }
        
        public bool Customer_Delete(decimal Customer_Id) {
            return base.Channel.Customer_Delete(Customer_Id);
        }
        
        public bool Customer_Update(decimal Customer_Id, string Customer_Name, string p_Phone, string p_Fax, string p_Identity_Card, string p_Address, string p_Tax_Code, decimal Customer_Type, decimal Is_Person, string Position) {
            return base.Channel.Customer_Update(Customer_Id, Customer_Name, p_Phone, p_Fax, p_Identity_Card, p_Address, p_Tax_Code, Customer_Type, Is_Person, Position);
        }
        
        public decimal Customer_Insert(string Customer_Name, string p_Phone, string p_Fax, string p_Identity_Card, string p_Address, string p_Tax_Code, decimal Customer_Type, decimal Is_Person, string Position) {
            return base.Channel.Customer_Insert(Customer_Name, p_Phone, p_Fax, p_Identity_Card, p_Address, p_Tax_Code, Customer_Type, Is_Person, Position);
        }
        
        public byte[] Customer_Search(string p_Tenant_Name, string p_Phone) {
            return base.Channel.Customer_Search(p_Tenant_Name, p_Phone);
        }
        
        public byte[] Customer_Check_In_Contract(decimal Customer_Id) {
            return base.Channel.Customer_Check_In_Contract(Customer_Id);
        }
        
        public byte[] Estate_Object_GetAll() {
            return base.Channel.Estate_Object_GetAll();
        }
        
        public byte[] Estate_Object_GetStatus(decimal p_status) {
            return base.Channel.Estate_Object_GetStatus(p_status);
        }
        
        public byte[] Estate_Object_GetById(decimal p_Estate_Id) {
            return base.Channel.Estate_Object_GetById(p_Estate_Id);
        }
        
        public byte[] Estate_Object_GetType(decimal p_Estate_Type) {
            return base.Channel.Estate_Object_GetType(p_Estate_Type);
        }
        
        public byte[] Estate_Object_GetByObject(decimal p_Estate_Id, decimal p_Object_Type) {
            return base.Channel.Estate_Object_GetByObject(p_Estate_Id, p_Object_Type);
        }
        
        public bool Estate_Object_Update(decimal p_Estate_Id, string p_Estate_Name, decimal p_Estate_Type, string p_Area, decimal p_Status, string p_note) {
            return base.Channel.Estate_Object_Update(p_Estate_Id, p_Estate_Name, p_Estate_Type, p_Area, p_Status, p_note);
        }
        
        public bool Estate_Object_Delete(decimal p_Estate_Id) {
            return base.Channel.Estate_Object_Delete(p_Estate_Id);
        }
        
        public decimal Estate_Object_Insert(string p_Estate_Name, decimal p_Estate_Type, string p_Area, decimal p_Statu, string p_notes, string p_Estate_Code, decimal Building_Id) {
            return base.Channel.Estate_Object_Insert(p_Estate_Name, p_Estate_Type, p_Area, p_Statu, p_notes, p_Estate_Code, Building_Id);
        }
        
        public byte[] Check_Exit_EstateInContract(decimal p_Estate_Id) {
            return base.Channel.Check_Exit_EstateInContract(p_Estate_Id);
        }
        
        public byte[] Estate_Object_Search(string p_Estate_Name, string p_Estate_Type, string p_Status) {
            return base.Channel.Estate_Object_Search(p_Estate_Name, p_Estate_Type, p_Status);
        }
        
        public byte[] Estate_Object_GetCbo(decimal Contract_Type) {
            return base.Channel.Estate_Object_GetCbo(Contract_Type);
        }
        
        public decimal Extend_Contract_Insert(decimal p_Contract_Id, System.DateTime Contract_FromDate, System.DateTime Contract_ToDate, System.DateTime Extend_Date, decimal Term, decimal Fee, decimal FeeOnePay, decimal Price, decimal Number_Extend) {
            return base.Channel.Extend_Contract_Insert(p_Contract_Id, Contract_FromDate, Contract_ToDate, Extend_Date, Term, Fee, FeeOnePay, Price, Number_Extend);
        }
        
        public decimal Extend_Contract_Update(decimal p_Contract_Id, System.DateTime Contract_FromDate, System.DateTime Contract_ToDate, System.DateTime Extend_Date, decimal Term, decimal Fee, decimal FeeOnePay, decimal Price, decimal Fee_Status, decimal Extend_Contract_Id) {
            return base.Channel.Extend_Contract_Update(p_Contract_Id, Contract_FromDate, Contract_ToDate, Extend_Date, Term, Fee, FeeOnePay, Price, Fee_Status, Extend_Contract_Id);
        }
        
        public byte[] Extend_Contract_GetByContractId(decimal Contract_Id) {
            return base.Channel.Extend_Contract_GetByContractId(Contract_Id);
        }
        
        public decimal Get_Number_ExtendContract(decimal Contract_Id) {
            return base.Channel.Get_Number_ExtendContract(Contract_Id);
        }
        
        public byte[] Fees_Revenue_GetAll() {
            return base.Channel.Fees_Revenue_GetAll();
        }
        
        public byte[] Fees_Revenue_GetByContract(decimal p_Contract_Id) {
            return base.Channel.Fees_Revenue_GetByContract(p_Contract_Id);
        }
        
        public byte[] Fees_Revenue_GetByObject(decimal p_Object_Id, decimal p_Object_Type) {
            return base.Channel.Fees_Revenue_GetByObject(p_Object_Id, p_Object_Type);
        }
        
        public bool Fees_Revenue_Update(decimal p_Fee_Id, System.DateTime p_Pay_Date, decimal p_Fee, decimal p_status, decimal Debit_Amount) {
            return base.Channel.Fees_Revenue_Update(p_Fee_Id, p_Pay_Date, p_Fee, p_status, Debit_Amount);
        }
        
        public bool Fees_Revenue_Insert(decimal Contract_Id, decimal Object_Id, decimal Object_Type, decimal Currency, decimal Number_Payment, System.DateTime Pay_Date_Expected, System.DateTime Pay_Date, decimal Fee_Expected, decimal Fee, decimal Pay_Status, System.DateTime Date_Of_Bill, decimal Debit_Amount, decimal Is_Extend, decimal Fee_Vnd) {
            return base.Channel.Fees_Revenue_Insert(Contract_Id, Object_Id, Object_Type, Currency, Number_Payment, Pay_Date_Expected, Pay_Date, Fee_Expected, Fee, Pay_Status, Date_Of_Bill, Debit_Amount, Is_Extend, Fee_Vnd);
        }
        
        public bool Fees_Revenue_DeleteByContract(decimal p_Contract_Id) {
            return base.Channel.Fees_Revenue_DeleteByContract(p_Contract_Id);
        }
        
        public byte[] Fees_Revenue_GetByObjectType(decimal p_Object_Type) {
            return base.Channel.Fees_Revenue_GetByObjectType(p_Object_Type);
        }
        
        public byte[] Fees_Report(string FromDate, string ToDate, string Created_By, string Estate_Code, string Users, string Customer_Name) {
            return base.Channel.Fees_Report(FromDate, ToDate, Created_By, Estate_Code, Users, Customer_Name);
        }
        
        public byte[] Function_GetAll() {
            return base.Channel.Function_GetAll();
        }
        
        public bool Function_Group_DelByGroup(decimal p_group_id) {
            return base.Channel.Function_Group_DelByGroup(p_group_id);
        }
        
        public byte[] Get_Function_ByGroup(decimal p_group_id) {
            return base.Channel.Get_Function_ByGroup(p_group_id);
        }
        
        public int Function_Group_Insert_Batch(ObjInfo.Function_GroupInfo[] p_arr) {
            return base.Channel.Function_Group_Insert_Batch(p_arr);
        }
        
        public byte[] GroupUser_GetAll() {
            return base.Channel.GroupUser_GetAll();
        }
        
        public bool GroupUser_Delete(decimal id) {
            return base.Channel.GroupUser_Delete(id);
        }
        
        public bool GroupUser_Update(decimal id, string p_name, decimal p_group_type, string p_note) {
            return base.Channel.GroupUser_Update(id, p_name, p_group_type, p_note);
        }
        
        public decimal GroupUser_Insert(string p_name, decimal p_group_type, string p_note) {
            return base.Channel.GroupUser_Insert(p_name, p_group_type, p_note);
        }
        
        public byte[] User_Login(string p_user_name, string p_pass) {
            return base.Channel.User_Login(p_user_name, p_pass);
        }
        
        public byte[] User_Get_All() {
            return base.Channel.User_Get_All();
        }
        
        public bool User_Update_Last_Login(decimal p_User_Id, System.DateTime p_last) {
            return base.Channel.User_Update_Last_Login(p_User_Id, p_last);
        }
        
        public bool User_Update_Pass(decimal p_User_Id, string p_pass) {
            return base.Channel.User_Update_Pass(p_User_Id, p_pass);
        }
        
        public bool User_Delete(decimal p_User_Id) {
            return base.Channel.User_Delete(p_User_Id);
        }
        
        public decimal User_Insert(string p_User_Name, string p_pass, decimal p_user_type, string p_full_name, decimal p_status, string p_phone, decimal p_group_id) {
            return base.Channel.User_Insert(p_User_Name, p_pass, p_user_type, p_full_name, p_status, p_phone, p_group_id);
        }
        
        public bool User_Update(decimal p_User_Id, string p_User_Name, string p_pass, decimal p_user_type, string p_full_name, decimal p_status, string p_phone, decimal p_group_id) {
            return base.Channel.User_Update(p_User_Id, p_User_Name, p_pass, p_user_type, p_full_name, p_status, p_phone, p_group_id);
        }
        
        public byte[] Send_Users_Get_MenuItem(string p_user_name) {
            return base.Channel.Send_Users_Get_MenuItem(p_user_name);
        }
        
        public void User_Rights_DelByUser(string p_user_name) {
            base.Channel.User_Rights_DelByUser(p_user_name);
        }
        
        public void Delete_User_Right_By_UserFuntion(string p_user_name, string p_fun_id) {
            base.Channel.Delete_User_Right_By_UserFuntion(p_user_name, p_fun_id);
        }
        
        public int User_Rights_Insert_Barth(ObjInfo.User_RightsInfo[] p_arr) {
            return base.Channel.User_Rights_Insert_Barth(p_arr);
        }
        
        public byte[] User_Rights_GetByUser(decimal p_group_id, string p_username) {
            return base.Channel.User_Rights_GetByUser(p_group_id, p_username);
        }
    }
}
